/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <bits/stdc++.h>

using namespace std;

int longestPossibleRoute(vector<vector<int>>& v, int i, int j, vector<vector<int>>& visited) {
    int n = v.size();
    if (i >= n || j >= n || i < 0 || j < 0) {
        return 0;
    }
    
    if (v[i][j] == 0 || visited[i][j] == 1) {
        return 0;
    }
    
    if (i == n-1 && j == n-1) {
        return 1;
    }
    
    int up, down, left, right;
    visited[i][j] = 1;
    up = longestPossibleRoute(v, i-1, j, visited);
    down = longestPossibleRoute(v, i+1, j, visited);
    left = longestPossibleRoute(v, i, j-1, visited);
    right = longestPossibleRoute(v, i, j+1, visited);
    visited[i][j] = -1;
    
    int total = max(up,max(down,max(left,right)));
    if (total > 0) {
        return total + 1;
    }
    return total;

}


int main()
{
    vector<vector<int>> v{{1, 1, 1}, 
                           {1, 1, 1}, 
                           {0, 0, 1}};
    int n = 3;
    vector<vector<int>> visited(n, vector<int>(n,-1));
    cout<<longestPossibleRoute(v,0,0,visited) - 1;
    return 0;
}
