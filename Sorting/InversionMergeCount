/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <bits/stdc++.h>

using namespace std;

int mergeInversion(vector<int>& v, int start, int end) {
    int mid = (start + end) / 2;
    int leftLength = mid - start + 1;
    int rightLength = end - (mid + 1) + 1;
    int leftArray[leftLength];
    int rightArray[rightLength];
    for(int i=0; i<leftLength; i++) {
        leftArray[i] = v[start+i];
    }
    for(int i=0; i<rightLength; i++) {
        rightArray[i] = v[mid+1+i];
    }
    
    int mergeArray[leftLength+rightLength];
    int i = 0;
    int j = 0;
    int k = 0;
    int totalCount = 0;
    while (i<leftLength && j < rightLength) {
        if (leftArray[i] < rightArray[j]) {
            mergeArray[k] = leftArray[i];
            i++;
        } else {
            totalCount += rightLength - j;
            mergeArray[k] = rightArray[j];
            j++;
        }
        k++;
    }
    
    while(i < leftLength) {
        mergeArray[k] = leftArray[i];
        i++;
        k++;
    }
    
    while(j < rightLength) {
        mergeArray[k] = rightArray[j];
        j++;
        k++;
    }
    
    for(int m=0; m<(leftLength+rightLength); m++) {
        v[start+m] = mergeArray[m];
    }
    
    return totalCount;
}


int mergeInversionTotal(vector<int>& v, int start, int end) {
    if (start >= end) {
        return 0;
    }
    int mid = (start + end) / 2;
    int total = 0;
    total += mergeInversionTotal(v, start, mid);
    total += mergeInversionTotal(v, mid + 1, end);
    total += mergeInversion(v, start, end);
    
    return total;
}


int main()
{
    vector<int> v{0,5,2,3,1};
    cout<<mergeInversionTotal(v, 0, 4)<<endl;
    for(int i=0; i<v.size(); i++) {
        cout<<v[i]<<" ";
    }
}
