https://leetcode.com/problems/median-of-two-sorted-arrays/description/?envType=study-plan-v2&envId=top-interview-150


class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        priority_queue<int, vector<int>, greater<int>> pq1;
        priority_queue<int, vector<int>, greater<int>> pq2;

                for (int i=0; i<nums1.size(); i++) {
                    pq1.push(nums1[i]);
                }
                for (int i=0; i<nums2.size(); i++) {
                    pq2.push(nums2[i]);
                }

                int total = nums1.size() + nums2.size();
                bool isOdd = false;

                if (total % 2 != 0) {
                    isOdd = true;
                }

                int index = isOdd ?  int(total / 2) + 1 : int(total/2);
                int index2 = index + 1;
                int count = 0;
                int value;
                while(!pq1.empty() && !pq2.empty()) {
                    int tempValue;
                    count++;
                    if (pq1.top() < pq2.top()) {
                        tempValue = pq1.top();
                        pq1.pop();
                    } else {
                        tempValue = pq2.top();
                        pq2.pop();
                    }
                    if (count == index) {
                        if (isOdd) {
                            return tempValue;
                        }
                        value = tempValue;
                    }

                    if (count == index2) {
                        double d = double(value + tempValue)/2;
                        return d;
                    }
                }

                while(!pq1.empty()) {
                    count++;
                    if (count == index) {
                        if (isOdd) {
                            return pq1.top();
                        }
                        value = pq1.top();
                    }

                    if (count == index2) {
                        double d = double(value + pq1.top())/2;
                        return d;
                    }
                    pq1.pop();
                }

                while(!pq2.empty()) {
                    count++;
                    if (count == index) {
                        if (isOdd) {
                            return pq2.top();
                        }
                        value = pq2.top();
                    }

                    if (count == index2) {
                        double d = double(value + pq2.top())/2;
                        return d;
                    }
                    pq2.pop();
                }
       return -1;
    }
};
